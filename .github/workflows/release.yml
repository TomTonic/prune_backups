name: Build and Release Go Executables

on:
  push:
    tags:
      - 'v*' # Triggers on tags like v1.0.0

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: go.mod

      - name: Build Executable
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/prune_backups-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/prune_backups-*
        # uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        # with:
          # name: binaries
          # path: dist

#  release:
#    needs: build
#    runs-on: ubuntu-latest
#    strategy:
#        matrix:
#          goos: [linux, windows, darwin]
#          goarch: [amd64, arm64]
#    steps:
#      - name: Download Artifacts
#        uses: actions/download-artifact@v4.2.1
#        with:
#          name: binaries
#          path: ./dist

#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v1.1.4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref_name }}
#          release_name: Release ${{ github.ref_name }}
#          body: |
#            Binaries for release ${{ github.ref_name }} are available.
#          draft: false
#          prerelease: false

#      - name: Upload Release Assets
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./dist/prune_backups-*
#          asset_name: prune_backups-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
#          asset_content_type: application/octet-stream
