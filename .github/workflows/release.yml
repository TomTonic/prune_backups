name: Build and Release Go Executables

on:
  push:
    tags:
      - 'v*' # Triggers on tags like v1.0.0

permissions:
  contents: read

jobs:
  build:
    name: Build and Release
    # Declare default permissions as write to be allowed to publich artifacts.
    permissions:
      contents: write
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        goos: [linux, windows, darwin]
#        goarch: [amd64, arm64]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Build Executable
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/prune_backups-amd64-linux .
          GOOS=linux GOARCH=arm64 go build -o dist/prune_backups-arm64-linux .
          GOOS=linux GOARCH=386 go build -o dist/prune_backups-x86-linux .
          GOOS=linux GOARCH=arm go build -o dist/prune_backups-arm-linux .
          GOOS=windows GOARCH=amd64 go build -o dist/prune_backups-amd64-win.exe .
          GOOS=windows GOARCH=arm64 go build -o dist/prune_backups-arm64-win.exe .
          GOOS=windows GOARCH=386 go build -o dist/prune_backups-x86-win.exe .
          GOOS=darwin GOARCH=amd64 go build -o dist/prune_backups-amd64-mac .
          GOOS=darwin GOARCH=arm64 go build -o dist/prune_backups-arm64-mac .
#          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/prune_backups-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload Release Assets
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          files: |
            dist/prune_backups-*